@page "/login"
<h3>Login</h3>


<div class="contanier">

    <EditForm Model="LoginModel" OnValidSubmit="LoginClicked">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="card">
        <div class="card-body">
            <div class="form-control">
                <label>Username</label>
                <InputText @bind-Value="LoginModel.UserName"/>
            </div>
            <div class="form-control">
                <label>Password</label>
                <InputText @bind-Value="LoginModel.Password"/>
            </div>
        </div>
    </div>
    <div class="form-control">
        <button class="btn btn-primary" type="submit">Login</button>
    </div>
    </EditForm>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <ErrorDisplay ErrorMessage="@errorMessage"></ErrorDisplay>
}

@code
{
    public LoginUserModel LoginModel { get; set; } = new();

    private string? errorMessage;
    string? token;
    bool check;

    private async Task LoginClicked()
    {
        (token,errorMessage,check) = await UserIntegration.Login(LoginModel);

       if (check)
       {
           var state = (CustomAuthStateProvider)AuthenticationState;

           state?.GetAuthenticationStateAsync();
           state.UpdateState();

           NavigationManager.NavigateTo("/",forceLoad:true);
       }
    }
}
