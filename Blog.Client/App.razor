@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {
                        RedirectToLogin();
                    }
                    else
                    {
                        <h3>Access Denied</h3>
                        <p>You don't have permission to view this page</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
            <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    void RedirectToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }
}